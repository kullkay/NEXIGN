Задание 1
Выбрать Docker-образ любого приложения.
Просканировать его с помощью Trivy для выявления уязвимостей.
Провести триаж уязвимостей, оценив их критичность с точки зрения реальной угрозы.
Приоритезировать уязвимости по уровню риска.
Для каждой уязвимости:
	-предложить меры устранения;
	-указать компенсирующие меры.
Устранять уязвимости и демонстрировать PoC не требуется.

Задание 2
Цель:
Подготовить инструкцию по настройке и запуску статического анализатора PT AI в рамках CI/CD-процесса для проектов на Java и C++.

Контекст:
	-языки программирования: Java, C++;
	-инструмент: ptai-cli-plugin.jar (командный интерфейс PT AI).

Требования к инструкции:
	-Пошаговые действия – четкое описание, что и в каком порядке выполнять.
	-Предварительные требования – что нужно подготовить перед запуском.
	-Входные данные – что передавать анализатору для каждого языка.
	-Команды и конфигурация – конкретные примеры вызова с параметрами.
	-Гибкость настроек – рекомендации по параметризации аргументов и конфигов.
	-Обоснование решений – почему те или иные параметры стоит изменять или фиксировать.

Ограничение: не рассматривать интеграцию с конкретными CI/CD-системами (Jenkins, GitLab CI и др.), только работу с PT AI.